<Window x:Class="ScoreboardController.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:views="clr-namespace:ScoreboardController.Views"
        Title="Scoreboard Controller"
        WindowState="Maximized"
        WindowStyle="SingleBorderWindow"
        Background="#333">

    <Window.Resources>
        <!-- Base style: Gray, 80x80, with IsPressed trigger -->
        <Style x:Key="BaseButtonStyle" TargetType="Button">
            <!-- Basic sizing and appearance -->
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Background" Value="#555"/>
            <!-- unpressed/normal color -->
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="8"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

            <!-- The ControlTemplate now uses a TextBlock with wrapping -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        CornerRadius="10"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">

                            <!-- Wrapping the button content in a TextBlock. -->
                            <TextBlock x:Name="text"
                               Text="{TemplateBinding Content}"
                               TextWrapping="Wrap"
                               TextAlignment="Center"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding Foreground}"
                               Margin="5,5,5,5"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- 1) MouseOver Trigger -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#666"/>
                            </Trigger>

                            <!-- 2) Pressed Trigger -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#333"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#777"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- SoftKey: inherits from BaseButtonStyle, same pressed logic -->
        <Style x:Key="SoftKeyButtonStyle" 
               TargetType="Button" 
               BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="BorderBrush" Value="White"/>
        </Style>

        <!-- Numpad (blue) style: with IsPressed override -->
        <Style x:Key="NumpadButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="48"/>
            <Setter Property="Background" Value="#FF020C5A"/>
            <!-- normal blue -->
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        CornerRadius="10"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">

                            <!-- Wrap text if needed -->
                            <TextBlock x:Name="text"
                               Text="{TemplateBinding Content}"
                               TextWrapping="Wrap"
                               TextAlignment="Center"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding Foreground}"
                               Margin="5"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- MouseOver => slight shade change -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#598EE0"/>
                            </Trigger>
                            <!-- Pressed => darker shade -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2A5CA0"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#3F4F70"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Universal controls (blue, 80x80) with pressed trigger -->
        <Style x:Key="UniversalButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Background" Value="#020C5A"/>
            <!-- normal blue -->
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        CornerRadius="10"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                            <!-- Wrapping text -->
                            <TextBlock x:Name="text"
                               Text="{TemplateBinding Content}"
                               TextWrapping="Wrap"
                               TextAlignment="Center"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding Foreground}"
                               Margin="5"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Mouse over => slightly lighter -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#598EE0"/>
                            </Trigger>

                            <!-- Pressed => darker -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2A5CA0"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#3F4F70"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <!-- 2-row layout: top half = "screen" (16:9), bottom half = all buttons -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="40" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="40" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- TOP HALF: 16:9 ratio, e.g. 960x540 black rectangle 
             with placeholder text (00:00.0, arrow down, PERIOD 1)
        -->
        <Grid Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ControllerScreenGrid" Margin="5,20,5,10">
            <!-- 16:9 ratio container -->
            <Border BorderBrush="Gray" BorderThickness="4" Background="Black"
            Width="1600" Height="540">

                <!-- Main grid: Three columns and a collapsible input prompt area -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <!-- Main content -->
                        <RowDefinition Height="Auto" />
                        <!-- Collapsible prompt area -->
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <!-- Home stats -->
                        <ColumnDefinition Width="*" />
                        <!-- Game clock and general stats -->
                        <ColumnDefinition Width="*" />
                        <!-- Game clock and general stats -->
                        <ColumnDefinition Width="*" />
                        <!-- Game clock and general stats -->
                        <ColumnDefinition Width="*" />
                        <!-- Guest stats -->
                    </Grid.ColumnDefinitions>

                    <!-- Home aux stats -->
                    <Grid Grid.Row="0" Grid.Column="0"
                          x:Name="HomeMiscGrid"
                          Margin="5"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Black">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>

                    <!-- Home stats -->
                    <Grid Grid.Row="0" Grid.Column="1"
                          x:Name="HomeStatsGrid"
                          Margin="5"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Black">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>

                    <!-- Game stats -->
                    <Grid Grid.Row="0" Grid.Column="2"
                          x:Name="GameStatsGrid"
                          Margin="5"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Black">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>



                    <!-- Game stats -->
                    <Grid Grid.Row="0" Grid.Column="3"
                          x:Name="GuestStatsGrid"
                          Margin="5"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Black">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>

                    <Grid Grid.Row="0" Grid.Column="4"
                          x:Name="GuestMiscGrid"
                          Margin="5"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Black">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>

                    <!-- Collapsible prompt area -->
                    <StackPanel Grid.Column="1" x:Name="InputPromptPanel"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        Orientation="Vertical"
                        Visibility="Collapsed"
                        Background="#222"
                        Margin="0,10,0,10">

                        <!-- Show instructions, e.g., "Set Time _ _ : _ _ . _" -->
                        <TextBlock x:Name="PromptTextBlock"
                           Foreground="White"
                           FontSize="24"
                           HorizontalAlignment="Center"
                           Margin="5" />

                        <!-- Show the user's typed input, e.g., "20305" -->
                        <TextBlock x:Name="UserInputTextBlock"
                           Foreground="Yellow"
                           FontSize="32"
                           HorizontalAlignment="Center"
                           Margin="5" />
                    </StackPanel>


                </Grid>

            </Border>
        </Grid>



        <!-- BOTTOM HALF: Named 'BottomGrid' to place softkeys, numpad, universal controls -->
        <!-- BOTTOM HALF: Updated for dynamic softkeys -->
        <Grid x:Name="BottomGrid" Background="#FF202121"
              Grid.Row="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Top">

            <Grid.ColumnDefinitions>
                <!-- 10 columns for softkeys -->
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />

                <!-- Spacer -->
                <ColumnDefinition Width="40" />

                <!-- 4 columns for numpad -->
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />

                <!-- Spacer -->
                <ColumnDefinition Width="40" />

                <!-- 2 columns for universal controls -->
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <!-- 4 rows for softkeys -->
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- UniformGrid for SoftKeys -->
            <ItemsControl Grid.Row="0" Grid.RowSpan="4" Grid.Column="0" Grid.ColumnSpan="10"
                          ItemsSource="{Binding SoftKeys}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="4" Columns="10" Visibility="Visible" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding Text}"
                                Style="{StaticResource SoftKeyButtonStyle}"
                                Command="{Binding Command}"
                                CommandParameter="{Binding Tag}" 
                                Background="{Binding BackgroundColor}" 
                                Foreground="{Binding TextColor}"
                                Visibility="{Binding Visibility}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <!-- NUMPAD (blue): 
                 bottom row => [Clear, 0, Enter] 
                 i.e. col=11 => Clear, col=12 => 0, col=13 => Enter 
            -->
            <!-- Row 0: 7,8,9 -->
            <Button Grid.Row="0" Grid.Column="11" Content="Set" Style="{StaticResource UniversalButtonStyle}" Tag="Key7" Click="NumPad_Click" Background="#4A6FAE"/>
            <Button Grid.Row="0" Grid.Column="12" Content="7" Style="{StaticResource NumpadButtonStyle}" Tag="Key7" Click="NumPad_Click"/>
            <Button Grid.Row="0" Grid.Column="13" Content="8" Style="{StaticResource NumpadButtonStyle}" Tag="Key8" Click="NumPad_Click"/>
            <Button Grid.Row="0" Grid.Column="14" Content="9" Style="{StaticResource NumpadButtonStyle}" Tag="Key9" Click="NumPad_Click"/>

            <!-- Row 1: 4,5,6 -->
            <Button Grid.Row="1" Grid.Column="11" Content="Blank" Style="{StaticResource UniversalButtonStyle}" Tag="Key7" Click="NumPad_Click" Background="#4A6FAE"/>
            <Button Grid.Row="1" Grid.Column="12" Content="4" Style="{StaticResource NumpadButtonStyle}" Tag="Key4" Click="NumPad_Click"/>
            <Button Grid.Row="1" Grid.Column="13" Content="5" Style="{StaticResource NumpadButtonStyle}" Tag="Key5" Click="NumPad_Click"/>
            <Button Grid.Row="1" Grid.Column="14" Content="6" Style="{StaticResource NumpadButtonStyle}" Tag="Key6" Click="NumPad_Click"/>

            <!-- Row 2: 1,2,3 -->
            <Button Grid.Row="2" Grid.Column="11" Content="Menu" Style="{StaticResource UniversalButtonStyle}" Tag="Key7" Click="NumPad_Click" Background="#4A6FAE"/>
            <Button Grid.Row="2" Grid.Column="12" Content="1" Style="{StaticResource NumpadButtonStyle}" Tag="Key1" Click="NumPad_Click"/>
            <Button Grid.Row="2" Grid.Column="13" Content="2" Style="{StaticResource NumpadButtonStyle}" Tag="Key2" Click="NumPad_Click"/>
            <Button Grid.Row="2" Grid.Column="14" Content="3" Style="{StaticResource NumpadButtonStyle}" Tag="Key3" Click="NumPad_Click"/>

            <!-- Row 3: Clear, 0, Enter -->
            <Button Grid.Row="3" Grid.Column="11" Content="⌫" FontSize="36" Style="{StaticResource UniversalButtonStyle}" Tag="Key7" Click="NumPad_Click" Background="#5A5A02" Foreground="White"/>
            <Button Grid.Row="3" Grid.Column="12" Content="Clear" 
                    Style="{StaticResource NumpadButtonStyle}"
                    Background="#5A0202" Foreground="White" Tag="Clear"
                    Click="NumPad_Click" FontSize="24"/>
            <Button Grid.Row="3" Grid.Column="13" Content="0" Tag="Key0"
                    Style="{StaticResource NumpadButtonStyle}"
                    Click="NumPad_Click"/>
            <Button Grid.Row="3" Grid.Column="14" Content="Enter" Tag="Enter"
                    Style="{StaticResource NumpadButtonStyle}"
                    Background="#025A02" Foreground="White"
                    Click="NumPad_Click" FontSize="24"/>

            <!-- UNIVERSAL BUTTONS (blue, 80x80), in 2 columns, 4 rows total:
                 Left col = col=15 => row=0..3
                 Right col= col=16 => row=0..3
            -->
            <Button Grid.Row="0" Grid.Column="16" Content="Set Time" Tag="SetTime" x:Name="SetTimeButton"
                    Style="{StaticResource UniversalButtonStyle}"
                    />
            <Button Grid.Row="1" Grid.Column="16" Content="Period" Tag="Period" x:Name="SetPeriodButton"
                    Style="{StaticResource UniversalButtonStyle}"
                    />
            <Button Grid.Row="0" Grid.Column="17" Content="Set Default" x:Name="SetDefaultTimeButton" Tag="SetDefaultTime"
                    Style="{StaticResource UniversalButtonStyle}" FontSize="18" />
            <Button Grid.Row="1" Grid.Column="17" Content="Reset Time" x:Name="ResetTimeButton" Tag="ResetTime"
                    Style="{StaticResource UniversalButtonStyle}" />

            <!-- Time In (green), Time Out (red) in col=16, row=0,1 -->
            <Button Grid.Row="3" Grid.Column="16" Content="Time In" x:Name="TimeInButton" Tag="TimeIn"
                    Style="{StaticResource UniversalButtonStyle}"
                    Background="#025A02" Foreground="White" HorizontalAlignment="Left" Grid.ColumnSpan="2" Margin="0,0,0,0" Width="210"/>
            <Button Grid.Row="2" Grid.Column="16" Content="Time Out" x:Name="TimeOutButton" Tag="TimeOut"
                    Style="{StaticResource UniversalButtonStyle}"
                    Background="#5A0202" Foreground="White" HorizontalAlignment="Left" Grid.ColumnSpan="2"  Width="210" Margin="0,0,0,0"/>
            <!-- row=2..3 in col=16 can remain empty for future controls -->

        </Grid>
        <Grid Grid.Row="4" x:Name="SystemGrid" HorizontalAlignment="Center" VerticalAlignment="Top" Background="#FF202121">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Button Grid.Row="0" Grid.Column="1" Content="New Game" Style="{StaticResource UniversalButtonStyle}" Tag="Key3" Click="NumPad_Click" Background="#FF5A0202"/>
            <Button Grid.Row="0" Grid.Column="2" Content="Horn" Style="{StaticResource UniversalButtonStyle}" Background="#FF5A5A02" Foreground="White" Tag="Key3" Click="NumPad_Click"/>
            <Button Grid.Row="0" Grid.Column="3" Content="Count Up" Style="{StaticResource UniversalButtonStyle}" Tag="Key3" Click="NumPad_Click"/>
            <Button Grid.Row="0" Grid.Column="4" Content="Count Down" Style="{StaticResource UniversalButtonStyle}" Tag="Key3" Click="NumPad_Click"/>
        </Grid>
    </Grid>
</Window>
